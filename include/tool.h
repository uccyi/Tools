#ifndef TOOL_H
#define TOOL_H

#include <stdio.h>
#include <stdlib.h>
#include <memory.h>
#include <string.h>
#include <ctype.h>
#include <time.h>
#include	<stdarg.h>

#include <sys/types.h>
#ifdef _WIN32
#include	<io.h>
#else
#include <unistd.h>
#include <sys/param.h>
#include <dirent.h>
#include <inttypes.h>
#endif

#ifndef MAXPATHLEN
#define	MAXPATHLEN		1024
#endif

#define NROWS           100
#define NCOLUMNS        MAXPATHLEN

union UC_I{
  unsigned char	c[4];
  int		data;
};

union UC_S{
  unsigned char	c[2];
  short		data;
};

static unsigned char EBCDIC[] = {0x40,0x41,0x42,0x43,0x44,0x45,0x46,0x47,0x48,0x49, \
				 0x4a,0x4b,0x4c,0x4d,0x4e,0x4f,0x50,0x51,0x52,0x53, \
				 0x54,0x55,0x56,0x58,0x5a,0x5b,0x5c,0x5d,0x5e,0x5f, \
				 0x60,0x61,0x6b,0x6c,0x6d,0x6e,0x6f,0x79,0x7a,0x7b, \
				 0x7c,0x7d,0x7e,0x7f,0x81,0x82,0x83,0x84,0x85,0x86, \
				 0x87,0x88,0x89,0x8a,0x8c,0x8d,0x8e,0x8f,0x90,0x91, \
				 0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9a,0x9d, \
				 0x9e,0x9f,0xa1,0xa2,0xa3,0xa4,0xa5,0xa6,0xa7,0xa8, \
				 0xa9,0xaa,0xac,0xad,0xae,0xaf,0xba,0xbb,0xbc,0xbd, \
				 0xbe,0xbf,0xc0,0xc1,0xc2,0xc3,0xc4,0xc5,0xc6,0xc7, \
				 0xc8,0xc9,0xd0,0xd1,0xd2,0xd3,0xd4,0xd5,0xd6,0xd7, \
				 0xd8,0xd9,0xe0,0xe2,0xe3,0xe4,0xe5,0xe6,0xe7,0xe8, \
				 0xe9,0xf0,0xf1,0xf2,0xf3,0xf4,0xf5,0xf6,0xf7,0xf8, \
				 0xf9,0xff \
};
static unsigned char ASCII[] = {0x20,0xa1,0xa2,0xa3,0xa4,0xa5,0xa6,0xa7,0xa8,0xa9, \
				0x5b,0x2e,0x3c,0x28,0x2b,0x21,0x26,0xaa,0xab,0xac, \
				0xad,0xae,0xaf,0xb0,0x5d,0x5c,0x2a,0x29,0x3b,0x7c, \
				0x2d,0x2f,0x2c,0x25,0x5f,0x3e,0x3f,0x27,0x3a,0x23, \
				0x40,0x60,0x3d,0x22,0xb1,0xb2,0xb3,0xb4,0xb5,0xb6, \
				0xb7,0xb8,0xb9,0xba,0xbb,0xbc,0xbd,0xbe,0xbf,0xc0, \
				0xc1,0xc2,0xc3,0xc4,0xc5,0xc6,0xc7,0xc8,0xc9,0xca, \
				0xcb,0xcc,0x7e,0xcd,0xce,0xcf,0xd0,0xd1,0xd2,0xd3, \
				0xd4,0xd5,0xd6,0xd7,0xd8,0xd9,0xda,0xdb,0xdc,0xdd, \
				0xde,0xdf,0x7b,0x41,0x42,0x43,0x44,0x45,0x46,0x47, \
				0x48,0x49,0x7d,0x4a,0x4b,0x4c,0x4d,0x4e,0x4f,0x50, \
				0x51,0x52,0x24,0x53,0x54,0x55,0x56,0x57,0x58,0x59, \
				0x5a,0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38, \
				0x39,0xff \
};

extern FILE*	my_fopen(const char *_Filename, const char *_Mode);
extern int	my_sprintf(char* _DstBuf, size_t _DstSize, const char* _Format, ...);
#ifdef _WIN32
extern errno_t	my_strcpy(char* _Dst, rsize_t _DstSize, const char* _Src);
extern errno_t	my_access(const char* _Filename, int _AccessMode);
#else
extern char*	my_strcpy(char* s1, size_t n, const char* s2);
extern int	my_access(const char* _Filename, int _AccessMode);
#endif

extern char ItoC(int);
extern void Hex2UC(char*, unsigned int, unsigned char*);
extern void xor00n(unsigned char*, unsigned char*, int, unsigned char*);
extern unsigned char fromASCIItoEBCDIC(unsigned char);
extern unsigned char fromEBCDICtoASCII(unsigned char);
extern void I2UC(int, unsigned char*);
extern void UC2I(unsigned char*, int*);
extern void S2UC(short, unsigned char*);
extern void UC2S(unsigned char*, short*);
extern long ut2jd(double*, int, int, int, int, int, int);
extern void jd2ut(int*, int*, int*, int*, int*, int*, long, double);
extern void dayAdd(int*, int*, int*, int, int, int, int);
extern int dayDiff(int, int, int, int, int, int);
extern int IsLeapYear(int);
extern int DaysInMonth(int, int);
extern int IsGoodDate(int, int, int);
extern char* proc_time();
extern int RecPartition(char, char*, int*, char data[][NCOLUMNS]); /* 2019/01/09　ADD 赤水　透　【V07L01】戻り値修正 */
extern void trim(char*);
extern void trim_all(char*); /* 2019/01/09　ADD 赤水　透　【V07L01】関数追加 */
extern int ExecPathGet(char*, char*);

#endif /* TOOL_H */
